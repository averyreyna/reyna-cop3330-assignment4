@startuml
'https://plantuml.com/class-diagram'

class main
{
    launch()
}
class Application
{
    main : public static void
    start : public void
}
class ApplicationContoller
{
    outerMap : HashMap<String, HashMap<String, Application.ItemDetails>>
    innerMap : HashMap<String, Application.ItemDetails>
    addToDoList : public static HashMap<String, HashMap<String, Application.ItemDetails>>
    addItem : public static HashMap<String, Application.ItemDetails>
    removeToDoList : public static HashMap<String, HashMap<String, Application.ItemDetails>>
    removeItem : public static HashMap<String, Application.ItemDetails>
    editItemDueDate : public static HashMap<String, Application.ItemDetails>
    editItemDescription : public static HashMap<String, Application.ItemDetails>
    editItemCompletionStatus : public static HashMap<String, Application.ItemDetails>
    createCompletedItemsList : public ArrayList<ItemDetails>
    createUncompletedItemsList : public ArrayList<ItemDetails>
    editToDoListTitle : public static HashMap<String, HashMap<String, ItemDetails>>
    editItemTitle : public static HashMap<String, ItemComponents>
    editItemDueDate : public static HashMap<String, ItemComponents>
    editItemDescription : public static HashMap<String, ItemComponents>
    editItemCompletionStatus : public static HashMap<String, ItemComponents>
}

class start
{
    root : Parent
    FXMLLoader.load(Objects.requireNonNull(getClass().getResource("WelcomeScreen.fxml")))
    scene : Scene
    Scene(root)
    stage.setScene(scene)
    stage.setTitle("To-Do App")
    stage.show()
}

class addToDoList
{
    outerMap.put(toDoListTitle, innerMap)
}

class addItem
{
    itemDetails : ItemDetails
    completionFlag : Integer
    itemDetails.setDueDate(dueDate)
    itemDetails.setItemDescription(itemDescription)
    itemDetails.setCompletionFlag(completionFlag)
    innerMap.put(itemTitle, itemDetails)
}

class removeToDoList
{
    itemDetails : ItemDetails
    innerMap.remove(itemTitle, itemDetails)
}

class removeItem
{
     itemDetails : ItemDetails
     innerMap.remove(itemTitle, itemDetails)
}

class editItemDueDate
{
    itemDetails : ItemDetails
    itemDetails.setDueDate(dueDate)
    innerMap.put(itemTitle, itemDetails)
}

class editItemDescription
{
    itemDetails : ItemDetails
    completionFlag : Integer
    itemDetails.setCompletionFlag(completionFlag)
    innerMap.put(itemTitle, itemDetails)
}

class editItemCompletionStatus
{
    itemDetails : ItemDetails
    completionFlag : Integer
    itemDetails.setCompletionFlag(completionFlag)
    innerMap.put(itemTitle, itemDetails)
}

class createCompletedItemsList
{
    completedItemsList : ArrayList<ItemDetails>
    itemDetails : ItemDetails
    i : Integer
    innerMap.entrySet()
    entry.getValue().getItemCompletionFlag()
    completedItemsList.set(i, innerMap.getOrDefault(entry.getKey(), itemDetails))
}

class createUncompletedItemsList
{
    completedItemsList : ArrayList<ItemDetails>
    itemDetails : ItemDetails
    i : Integer
    innerMap.entrySet()
    entry.getValue().getItemCompletionFlag()
    completedItemsList.set(i, innerMap.getOrDefault(entry.getKey(), itemDetails))
}

class editToDoListTitle
{
    copyOfItems : HashMap<String, ItemDetails>
    outerMap.remove(oldToDoListTitle)
    outerMap.put(newToDoListTitle, copyOfItems)
}

class editItemTitle
{
    ItemComponents copyOfItems : innerMap.remove(oldItemTitle);
    innerMap.put(newItemTitle, copyOfItems);
}

class editItemDueDate
{
    itemComponents : ItemComponents
    itemComponents.setItemDueDate(itemDueDate)
    innerMap.put(itemTitle, itemComponents)
}

class editItemDescription
{
    itemComponents : ItemComponents
    itemComponents.setItemDescription(itemDescription)
    innerMap.put(itemTitle, itemComponents)
}

class editItemCompletionStatus
{
    itemComponents : ItemComponents
    itemComponents.setItemCompletionFlag(itemCompletionStatus)
    innerMap.put(itemTitle, itemComponents)
}

Application -- main : contains >
Application -- start : contains >
ApplicationContoller -- Application : extends >
addToDoList -- ApplicationContoller : contains <
addItem -- ApplicationContoller : contains <
removeToDoList -- ApplicationContoller : contains <
removeItem -- ApplicationContoller : contains <
editItemDueDate -- ApplicationContoller : contains <
editItemDescription -- ApplicationContoller : contains <
editItemCompletionStatus -- ApplicationContoller : contains <
createCompletedItemsList -- ApplicationContoller : contains <
createUncompletedItemsList -- ApplicationContoller : contains <
editToDoListTitle -- ApplicationContoller : contains <
editItemTitle -- ApplicationContoller : contains <
editItemDueDate -- ApplicationContoller : contains <
editItemDescription -- ApplicationContoller : contains <
editItemCompletionStatus -- ApplicationContoller : contains <

@enduml